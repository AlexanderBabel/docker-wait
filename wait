#!/bin/sh


usage() {
    echo ""
    echo "usage: $0 [-c] [-t]"
    echo ""
    echo "optional arguments:"
    echo " -c    connection(s) to wait for, host:port, multiple seperated by comma"
    echo " -t    timeout after which connection attempt will fail, default 30"
    echo ""
    echo " Example: $0 -c google.com:443,github.com:443 -t 15"
}

set -e

timeout=${TIMEOUT:-30}

# Parse arguments
while getopts ":t:c:" opt; do
    case $opt in
        t)
            TIMEOUT=$OPTARG
            if ! echo "$TIMEOUT" | grep -qE ^[0-9]+$; then
              echo "Invalid timeout number: $TIMEOUT" >&2
              exit 1
            fi
            ;;
        c)
            TARGETS="$OPTARG"
            ;;
        \?)
            set +x
            echo "Invalid option: -$OPTARG" >&2
            usage
            exit 1
            ;;
        :)
            set +x
            echo "Option -$OPTARG requires an argument." >&2
            usage
            exit 1
            ;;
    esac
done

# our target format is a newline-delimited list where each item is "host:ip"
if [ -z "$TARGETS" ]; then
  # empty TARGETS variable will default to checking all host/ports exposed
  uris=$(env | grep _TCP= | cut -d= -f2 | cut -c7- )

  if [ $(echo $uris | wc -w) -lt 1 ]; then
    echo "The linked container(s) export no ports and you didn't specify any manual targets." >&2
    usage
    exit 1
  fi
else
  uris=$(echo $TARGETS | sed -e 's/,/ /g' -e 's/\s+/\n/g' | uniq)
fi

# wait for each target
if [ -z "$uris" ]; then
  echo "No wait targets found." >&2
  usage
  exit 1
fi

for uri in $uris
do
  host=$(echo $uri | cut -d: -f1)
  port=$(echo $uri | cut -d: -f2)
  [ -n "${host}" ]
  [ -n "${port}" ]
  echo -n "Waiting for ${uri}  ."
  seconds=0
  while [ "$seconds" -lt "$timeout" ] && ! nc -z -w1 $host $port
  do
    echo -n .
    seconds=$((seconds+1))
    sleep 1
  done

  if [ "$seconds" -lt "$timeout" ]; then
    echo "  up!"
  else
    echo "  ERROR: unable to connect" >&2
    exit 1
  fi
done
echo "Everything is up"
exit 0
